name: SafeAI CodeGuard Protocol Validation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: "3.9"
  SAFETY_LEVEL: "high"
  REDIS_URL: "redis://localhost:6379"

jobs:
  validate:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Static Analysis
        run: |
          sacp analyze \
            --level ${{ env.SAFETY_LEVEL }} \
            --output report.json
        timeout-minutes: 30
      
      - name: Safety Validation
        run: |
          sacp validate \
            --distributed \
            --redis-url ${{ env.REDIS_URL }} \
            --workers 4
        timeout-minutes: 60
      
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: validation-report
          path: report.json
  
  performance:
    needs: validate
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Performance Analysis
        run: |
          sacp analyze \
            --mode performance \
            --output perf-report.json
        timeout-minutes: 30
      
      - name: Upload performance report
        uses: actions/upload-artifact@v3
        with:
          name: performance-report
          path: perf-report.json
  
  large-codebase:
    needs: validate
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Index Codebase
        run: |
          sacp index \
            --exclude "node_modules,.git" \
            --output index.db
        timeout-minutes: 30
      
      - name: Upload index
        uses: actions/upload-artifact@v3
        with:
          name: codebase-index
          path: index.db
